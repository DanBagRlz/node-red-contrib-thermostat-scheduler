[
    {
        "id": "b53c1f70.8e70f",
        "type": "tab",
        "label": "Cronotermostato v1 - giuseppeg88",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8cc0409c.e3cf6",
        "type": "ui_template",
        "z": "b53c1f70.8e70f",
        "group": "77b849cb.094c08",
        "name": "css etc",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<style>\n\n.filled { height: 48px !important;padding: 0 !important; margin: 0 !important;}\n.nr-dashboard-template { padding: 0; margin: 0;}\n.rounded { border-radius: 12px 12px 12px 12px;}\n.bigfont { font-size: 18px;}\n.smallfont { font-size: 12px;}\n.thedays { cursor:pointer; vertical-align:bottom; height:48px; }\n.the2px  { background-color: #9E9E9E; height:2px; }\n.theblocks {width:100%; height:0%; background-color:#4CAF50; }\n.greybuttons { background-color:#009688 !important; width:48px; border: none;}\n.thetemps { cursor:pointer; font-size:70%; color:#9E9E9E !important; }\n.smallheadings { color:white; font-size:80%; }\n\n</style>\n\n<script>\nvar current=1;\n\n$('.vibrate').on('click', function() {\n  navigator.vibrate(100);\n});\n\nfunction restore_bg(x) {\n            $(this).css(\"background-color\", x);\n    };\n\n$('.touched').on('mousedown', function() {\n    \n    var x= $(this).css(\"background-color\");\n    $(this).css(\"background-color\", \"yellow\");\n    \n    setTimeout(restore_bg.bind(this,x),50);\n    navigator.vibrate(80);\n    });\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 180,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "8e66ea98.c308e8",
        "type": "ui_template",
        "z": "b53c1f70.8e70f",
        "group": "77b849cb.094c08",
        "name": "Settings page",
        "order": 1,
        "width": 8,
        "height": 5,
        "format": "<script>\nvar thedays=[\"DOMENICA\",\"LUNEDI\",\"MARTEDI\",\"MERCOLEDI\",\"GIOVEDI\",\"VENERDI\",\"SABATO\"];\nvar ID = \"AA\";\n\nvar last=29;\n\nfunction bar(mm,val)\n{\nif (val==12 || val==12.5) { $(mm).height(\"12%\"); $(mm).css('background-color', '#1E88E5'); } //blue\nif (val==13 || val==13.5) { $(mm).height(\"16%\"); $(mm).css('background-color', '#039BE5'); }\nif (val==14 || val==14.5) { $(mm).height(\"20%\"); $(mm).css('background-color', '#00ACC1'); } \nif (val==15 || val==15.5) { $(mm).height(\"24%\"); $(mm).css('background-color', '#039BE5'); } // cyan\nif (val==16 || val==16.5) { $(mm).height(\"28%\"); $(mm).css('background-color', '#00ACC1'); }\nif (val==17 || val==17.5) { $(mm).height(\"32%\"); $(mm).css('background-color', '#00897B'); } \nif (val==18 || val==18.5) { $(mm).height(\"36%\"); $(mm).css('background-color', '#388E3C'); } // green\nif (val==19 || val==19.5) { $(mm).height(\"40%\"); $(mm).css('background-color', '#689F38'); }\nif (val==20 || val==20.5) { $(mm).height(\"44%\"); $(mm).css('background-color', '#C0CA33'); }\nif (val==21 || val==21.5) { $(mm).height(\"48%\"); $(mm).css('background-color', '#FDD835'); } // yellow\nif (val==22 || val==22.5) { $(mm).height(\"52%\"); $(mm).css('background-color', '#FBC02D'); }\nif (val==23 || val==23.5) { $(mm).height(\"56%\"); $(mm).css('background-color', '#FFA000'); }\nif (val==24) { $(mm).height(\"60%\"); $(mm).css('background-color','#E64A19'); } // red\n}\n\n//function bar(mm,val)\n//{\n//if (val==14 || val==14.5) { $(mm).height(\"12%\"); $(mm).css('background-color', '#1E88E5'); } //blue\n//if (val==15 || val==15.5) { $(mm).height(\"16%\"); $(mm).css('background-color', '#039BE5'); }\n//if (val==16 || val==16.5) { $(mm).height(\"20%\"); $(mm).css('background-color', '#00ACC1'); } \n//if (val==17 || val==17.5) { $(mm).height(\"24%\"); $(mm).css('background-color', '#039BE5'); } // cyan\n//if (val==18 || val==18.5) { $(mm).height(\"28%\"); $(mm).css('background-color', '#00ACC1'); }\n//if (val==19 || val==19.5) { $(mm).height(\"32%\"); $(mm).css('background-color', '#00897B'); } \n//if (val==20 || val==20.5) { $(mm).height(\"36%\"); $(mm).css('background-color', '#388E3C'); } // green\n//if (val==21 || val==21.5) { $(mm).height(\"40%\"); $(mm).css('background-color', '#689F38'); }\n//if (val==22 || val==22.5) { $(mm).height(\"44%\"); $(mm).css('background-color', '#C0CA33'); }\n//if (val==23 || val==23.5) { $(mm).height(\"48%\"); $(mm).css('background-color', '#FDD835'); } // yellow\n//if (val==24 || val==24.5) { $(mm).height(\"52%\"); $(mm).css('background-color', '#FBC02D'); }\n//if (val==25 || val==25.5) { $(mm).height(\"56%\"); $(mm).css('background-color', '#FFA000'); }\n//if (val==26) { $(mm).height(\"60%\"); $(mm).css('background-color','#E64A19'); } // red\n//}\n\nfunction stat(text)\n{\n$(\"#info\"+ID).text(text);\nvar tm=setTimeout(function(){ $(\"#info\"+ID).text(\"Ok\"); clearTimeout(tm);}, 3000);\n}\n\nfunction selec(val,sta)\n{\nvar w=\"#td\"+val+ID;\n if (sta) $(w).css('background-color','#4CAF50'); else $(w).css('background-color','#FFC107');\n}\n\n    (function(scope){\n        scope.ID = ID;\n        scope.send({payload: '29'})\n        scope.$watch('msg', function(msg) {\n            selec(last,0); last=msg.selector; selec(last,1);\n            for (var x=0; x<24; x++) \n                { \n                    var w=\"#t\"+x+ID; bar(w,msg.timing[((msg.days-1)*24)+x]); \n                    var v=\"#v\"+x+ID; $(v).text(msg.timing[((msg.days-1)*24)+x]+\"°\")\n                } \n            for (var x=0; x<2; x++) { var w=\"#s\"+x+ID; $(w).text(msg.timing[168+x]+\"°\"); }\n             $(\"#d0\"+ID).text(thedays[msg.days-1]);\n             if ((last>4) &&(last<29))\n                 $(\"#current\"+ID).text(msg.timing[((msg.days-1)*24)+last-5] + \"°\");\n             else\n                 $(\"#current\"+ID).text(\"-\");\n                 \n            if (msg.foryou!=\"\") { stat(msg.foryou);  }\n            \n             \n        });\n \n    })(scope);\n      \n\n</script>\n<table width=\"100%\">\n    \n    <tr>\n        <td colspan=24><center><span class=\"smallheadings\" >Giorno</span></center></td>\n        <!--<td colspan=3><center><span class=\"smallheadings\">Clima</span></center></td> -->\n        <td colspan=3><center><span class=\"smallheadings\">Fuori casa max</span></center></td> \n    </tr>\n   \n    <tr>\n        <td ng-click=\"send({payload: '29'})\" colspan=24><center><span id=\"{{ 'd0' + ID }}\" style=\"cursor:pointer;color:white;font-size:120%\">LUNEDI</span></center></td>\n        <!-- <td ng-click=\"send({payload: '1'})\" colspan=3><center><span id=\"{{'s0' + ID }}\" style=\"color:white;font-size:120%\">14</span></center></td>  -->\n        <td ng-click=\"send({payload: '2'})\" colspan=3><center><span id=\"{{'s1' + ID }}\" style=\"cursor:pointer;color:white;font-size:120%\">17</span></center></td> \n    </tr>\n    \n    <tr style=\"height:2px\">\n        <td id=\"{{ 'td29' + ID }}\" colspan=24 style=\"background-color:#9E9E9E;height:2px;\"></td>        \n        <!-- <td id=\"{{'td1' + ID }}\" colspan=3 style=\"background-color:#9E9E9E;height:2px;\"></td> -->\n        <td id=\"{{'td2 + ID '}}\" colspan=3 style=\"background-color:#9E9E9E;height:2px;\"></td> \n    </tr>  \n\n    <tr>\n        <td ng-click=\"send({payload: '5'})\" class=\"thedays\"><span id=\"{{ 'v0' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't0' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '6'})\" class=\"thedays\"><span id=\"{{ 'v1' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't1' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '7'})\" class=\"thedays\"><span id=\"{{ 'v2' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't2' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '8'})\" class=\"thedays\"><span id=\"{{ 'v3' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't3' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '9'})\" class=\"thedays\"><span id=\"{{ 'v4' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't4' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '10'})\" class=\"thedays\"><span id=\"{{ 'v5' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't5' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '11'})\" class=\"thedays\"><span id=\"{{ 'v6' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't6' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '12'})\" class=\"thedays\"><span id=\"{{ 'v7' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't7' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '13'})\" class=\"thedays\"><span id=\"{{ 'v8' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't8' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '14'})\" class=\"thedays\"><span id=\"{{ 'v9' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't9' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '15'})\" class=\"thedays\"><span id=\"{{ 'v10' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't10' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '16'})\" class=\"thedays\"><span id=\"{{ 'v11' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't11' + ID }}\" class=\"theblocks\"></div></td>\n    </tr>  \n    \n    <tr style=\"height:2px\">\n        <td id=\"{{ 'td5' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td6' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td7' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td8' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td9' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td10' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td11' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td12' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td13' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td14' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td15' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td16' + ID }}\" class=\"the2px\"></td>\n    </tr>   \n    \n    <tr>\n        <td align=\"center\">0</td>\n        <td align=\"center\">1</td>\n        <td align=\"center\">2</td>\n        <td align=\"center\">3</td>\n        <td align=\"center\">4</td>\n        <td align=\"center\">5</td>\n        <td align=\"center\">6</td>\n        <td align=\"center\">7</td>\n        <td align=\"center\">8</td>\n        <td align=\"center\">9</td>\n        <td align=\"center\">10</td>\n        <td align=\"center\">11</td>\n    </tr> \n    \n    <tr>\n        <td ng-click=\"send({payload: '17'})\" class=\"thedays\"><span id=\"{{ 'v12' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't12' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '18'})\" class=\"thedays\"><span id=\"{{ 'v13' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't13' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '19'})\" class=\"thedays\"><span id=\"{{ 'v14' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't14' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '20'})\" class=\"thedays\"><span id=\"{{ 'v15' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't15' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '21'})\" class=\"thedays\"><span id=\"{{ 'v16' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't16' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '22'})\" class=\"thedays\"><span id=\"{{ 'v17' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't17' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '23'})\" class=\"thedays\"><span id=\"{{ 'v18' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't18' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '24'})\" class=\"thedays\"><span id=\"{{ 'v19' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't19' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '25'})\" class=\"thedays\"><span id=\"{{ 'v20' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't20' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '26'})\" class=\"thedays\"><span id=\"{{ 'v21' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't21' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '27'})\" class=\"thedays\"><span id=\"{{ 'v22' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't22' + ID }}\" class=\"theblocks\"></div></td>\n        <td ng-click=\"send({payload: '28'})\" class=\"thedays\"><span id=\"{{ 'v23' + ID }}\" class=\"thetemps\"></span><div id=\"{{ 't23' + ID }}\" class=\"theblocks\"></div></td>\n    </tr>  \n    \n    <tr style=\"height:2px\">\n        <td id=\"{{ 'td17' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td18' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td19' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td20' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td21' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td22' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td23' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td24' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td25' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td26' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td27' + ID }}\" class=\"the2px\"></td>\n        <td id=\"{{ 'td28' + ID }}\" class=\"the2px\"></td>\n    </tr>  \n    \n    <tr>\n        <td align=\"center\">12</td>\n        <td align=\"center\">13</td>\n        <td align=\"center\">14</td>\n        <td align=\"center\">15</td>\n        <td align=\"center\">16</td>\n        <td align=\"center\">17</td>\n        <td align=\"center\">18</td>\n        <td align=\"center\">19</td>\n        <td align=\"center\">20</td>\n        <td align=\"center\">21</td>\n        <td align=\"center\">22</td>\n        <td align=\"center\">23</td>\n    </tr> \n    \n    <tr height=\"20px\">\n        <td colspan=2 class=\"smallheadings\">Azioni:</td>\n\n        <td colspan=10 ><center><span id=\"{{ 'info' + ID }}\" class=\"smallheadings\" ></span></center></td>\n\n    </tr>\n    \n    <tr height=\"10px\">\n        <td colspan=\"12\"></td>\n    </tr>\n\n    <tr style=\"height:48px\">\n        <td colspan=2>\n            <button class=\"vibrate filled touched smallfont rounded greybuttons\" ng-click=\"send({payload: 'd'})\"> \n               <ng-md-icon style=\"color: #fff;\" icon=\"keyboard_arrow_down\">\n                    <md-tooltip md-direction=\"bottom\">DECREMENTA</md-tooltip>\n                </ng-md-icon>\n            </button> \n        </td>\n        \n        <td colspan=2><center><span id=\"{{ 'current' + ID }}\" style=\"color:white;font-size:120%\">-</span></center></td>\n\n        <td colspan=2>\n            <button class=\"vibrate filled touched smallfont rounded greybuttons\" ng-click=\"send({payload: 'u'})\"> \n               <ng-md-icon style=\"color: #fff;\" icon=\"keyboard_arrow_up\">\n                    <md-tooltip md-direction=\"bottom\">INCREMENTA</md-tooltip>\n                </ng-md-icon>\n            </button> \n        </td>\n\n        <td colspan=2>\n            <button class=\"vibrate filled touched smallfont rounded greybuttons\" ng-click=\"send({payload: 'r'})\"> \n               <ng-md-icon style=\"color: #fff;\" icon=\"content_copy\">\n                    <md-tooltip md-direction=\"bottom\">COPIA</md-tooltip>\n                </ng-md-icon>\n            </button> \n        </td>\n\n\n        <td colspan=2>\n            <button class=\"vibrate filled touched smallfont rounded greybuttons\" ng-click=\"send({payload: 's'})\"> \n                 <ng-md-icon style=\"color: #fff;\" icon=\"save\">\n                    <md-tooltip md-direction=\"bottom\">SALVA</md-tooltip>\n                </ng-md-icon>\n            </button> \n        </td>\n\n        <td colspan=2>\n            <button class=\"vibrate filled touched smallfont rounded greybuttons\"  ng-click=\"send({payload: 'c'})\"> \n                 <ng-md-icon style=\"color: #fff;\" icon=\"cancel\">\n                    <md-tooltip md-direction=\"bottom\">ANNULLA</md-tooltip>\n                </ng-md-icon>\n            </button> \n        </td>\n        <td colspan=1></td>\n    </tr>\n\n</table>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 200,
        "y": 177,
        "wires": [
            [
                "91c19b27.3c9f08"
            ]
        ]
    },
    {
        "id": "91c19b27.3c9f08",
        "type": "function",
        "z": "b53c1f70.8e70f",
        "name": "Process controls",
        "func": "if ( typeof context.days == 'undefined' ) context.days=1;\nif ( typeof context.selector == 'undefined' ) context.selector=29;\nif ( typeof context.saving == 'undefined' ) context.saving=1;\nif ( typeof context.global.timing == 'undefined' ) \n    {\n        context.global.timing=[\n                        14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,\n                        14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,\n                        14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,\n                        14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,\n                        14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,\n                        14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,\n                        14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,\n                        6,14\n                        ];\n        context.saving=1;                    \n    }\nvar timing=global.get(\"timing\");\n\nswitch (msg.payload)\n    {\n    case \"u\" :  if ((context.selector>4)&&(context.selector<29))\n                {\n                    timing[((context.days-1)*24)+context.selector-5]+=0.5; \n                    if (timing[((context.days-1)*24)+context.selector-5]>24){ timing[((context.days-1)*24)+context.selector-5]=24; msg.foryou=\"Limite raggiunto\";}\n                    else msg.foryou=\"Temperatura aumentata\";\n                }\n                if (context.selector==1) { if (timing[168+(context.selector-1)]<24) {  timing[168+(context.selector-1)]+=0.5; msg.foryou=\"Temperatura clima aumentata di 0.5°C\"; } else msg.foryou=\"Limite raggiunto\"; }\n                if (context.selector==2) { if (timing[168+(context.selector-1)]<24) {  timing[168+(context.selector-1)]+=0.5; msg.foryou=\"Temperatura fuori casa aumentata di 0.5°C\"; } else msg.foryou=\"Limite raggiunto\"; }\n                if (context.selector==29) { msg.foryou=\"Giorno successivo\"; context.days++; if (context.days>7) { context.days = 1; } }\n                break;\n    case \"d\" :  if ((context.selector>4)&&(context.selector<29))\n                {\n                    timing[((context.days-1)*24)+context.selector-5]-=0.5; \n                    if (timing[((context.days-1)*24)+context.selector-5]<14){ timing[((context.days-1)*24)+context.selector-5]=14; msg.foryou=\"Limite raggiunto\";}\n                    else msg.foryou=\"Temperatura decrementata\";\n                }\n                if (context.selector==1) { if (timing[168+(context.selector-1)]>12) { timing[168+(context.selector-1)]-=0.5; msg.foryou=\"Temperatura clima diminuita di 0.5°C\"; } else msg.foryou=\"Limite raggiunto\"; }\n                if (context.selector==2) { if (timing[168+(context.selector-1)]>12) { timing[168+(context.selector-1)]-=0.5; msg.foryou=\"Temperatura fuori casa diminuita di 0.5°C\"; } else msg.foryou=\"Limite raggiunto\"; }\n                if (context.selector==29) {  msg.foryou=\"Giorno precedente\";  context.days--; if (context.days < 1) { context.days = 7;  } }\n                break;\n    case 'r' :  if ((context.selector>=5)&&(context.selector<28))\n                        {\n                         timing[((context.days-1)*24)+context.selector-4]=timing[((context.days-1)*24)+context.selector-5];   \n                         context.selector++;\n                         msg.foryou=\"Temperatura copiata nello slot successivo\";\n                        }\n                if ((context.selector==29)&&(context.days<7))\n                        {\n                         for (var a=0;a<24;a++)\n                            {\n                             timing[((context.days)*24)+a]=timing[((context.days-1)*24)+a];   \n                            }\n                         context.days++;\n                         msg.foryou=\"Impostazioni copiate nel giorno successivo\";\n                        }\n                        else if(context.days==7)\n                            msg.foryou=\"Fine della settimana raggiunto!\";\n                break;\n    case 's': context.saving=0;  msg.foryou=\"Impostazioni salvate\"; break;\n    case '1':\n    case '2':\n    case '3':\n    case '4':\n    case '5':\n    case '6':\n    case '7':\n    case '8':\n    case '9':\n    case '10':\n    case '11':\n    case '12':\n    case '13':\n    case '14':\n    case '15':\n    case '16':\n    case '17':\n    case '18':\n    case '19':\n    case '20':\n    case '21':\n    case '22':\n    case '23':\n    case '24':\n    case '25':\n    case '26':\n    case '27':\n    case '28':\n    case '29': context.selector=parseInt(msg.payload);\n               if (msg.payload=='1') msg.foryou=\"Temperatura clima selezionata\"; \n               else if (msg.payload=='2') msg.foryou=\"Temperatura fuori casa selezionata\";\n               else if (msg.payload=='29') msg.foryou=\"Giorno selezionato\";\n               else  msg.foryou=\"Regolazione temperatura ore: \" + (parseInt(msg.payload)-5);\n    break;\n    case 'c' : msg.payload=\"niente\";  msg.foryou=\"Cambiamenti annullati\"; node.send([null,null,msg]);\n    }\n\nmsg.temperatures=context.temperatures;\nmsg.timing=timing;\nmsg.days=context.days;\nmsg.selector=context.selector;\n\nnode.send([msg,null,null]);\n\nif (context.saving===0) \n    { \n       msg.topic=\"\";\n        msg.timing=\"\";\n        msg.payload=JSON.stringify(timing);\n        node.send([null,msg,null]); \n        context.saving=1;\n    }\n    msg.foryou=\"\"",
        "outputs": "3",
        "noerr": 0,
        "x": 470,
        "y": 240,
        "wires": [
            [
                "2f1fbf35.bb46e"
            ],
            [
                "7e59dbcf.503e04"
            ],
            [
                "5d8f707.eee7f9"
            ]
        ]
    },
    {
        "id": "7da018c4.912cf8",
        "type": "inject",
        "z": "b53c1f70.8e70f",
        "name": "Once only",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 208,
        "y": 277,
        "wires": [
            [
                "91c19b27.3c9f08",
                "f43ae8a0.512278"
            ]
        ]
    },
    {
        "id": "437f135e.fa4e0c",
        "type": "inject",
        "z": "b53c1f70.8e70f",
        "name": "Every minute",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "x": 220,
        "y": 420,
        "wires": [
            [
                "c1929c88.9308c"
            ]
        ]
    },
    {
        "id": "da41cfc9.63748",
        "type": "function",
        "z": "b53c1f70.8e70f",
        "name": "Process heat",
        "func": "var timing=global.get(\"timing\");\nvar now = new Date(msg.time);\n\nvar fixed_temperature = timing[(now.getDay()*24)+now.getHours()];\nvar away_temperature = timing[169];\nvar away_mode = flow.get(\"away_mode\");\n\nif (away_mode) {\n    msg.payload = (fixed_temperature > away_temperature ? away_temperature : fixed_temperature);\n    msg.awayMode = true;\n} else {\n    msg.payload = fixed_temperature;\n    msg.awayMode = false;\n}\n\nnode.status({fill:\"blue\",shape:\"dot\",text: \"Actual: \" + flow.get(\"ambient_temperature\") + \" - Set point: \" + msg.payload + \"°C\" + \" [away mode: \" + away_mode + \"]\"});\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 420,
        "wires": [
            [
                "331e9655.a67dca"
            ]
        ]
    },
    {
        "id": "7e59dbcf.503e04",
        "type": "file",
        "z": "b53c1f70.8e70f",
        "name": "backup",
        "filename": "/config/thermo_scheduler.log",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "x": 659,
        "y": 239,
        "wires": [
            []
        ]
    },
    {
        "id": "f43ae8a0.512278",
        "type": "file in",
        "z": "b53c1f70.8e70f",
        "name": "Restore",
        "filename": "/config/thermo_scheduler.log",
        "format": "utf8",
        "sendError": true,
        "x": 440,
        "y": 320,
        "wires": [
            [
                "d4bad6bd.de86d8"
            ]
        ]
    },
    {
        "id": "d4bad6bd.de86d8",
        "type": "function",
        "z": "b53c1f70.8e70f",
        "name": "Restore data from SD",
        "func": "context.global.timing=JSON.parse(msg.payload);\nmsg.payload=\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 320,
        "wires": [
            [
                "f902ad61.6b079"
            ]
        ]
    },
    {
        "id": "7a775741.7959d8",
        "type": "moment",
        "z": "b53c1f70.8e70f",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "UTC",
        "adjAmount": "1",
        "adjType": "hours",
        "adjDir": "add",
        "format": "dddd DD MMMM YYYY - HH:mm",
        "locale": "it_IT",
        "output": "payload",
        "outputType": "msg",
        "outTz": "UTC",
        "x": 520,
        "y": 500,
        "wires": [
            [
                "97727f5.03fee8"
            ]
        ]
    },
    {
        "id": "97727f5.03fee8",
        "type": "ui_text",
        "z": "b53c1f70.8e70f",
        "group": "317e9d9c.dea8e2",
        "order": 1,
        "width": 8,
        "height": 1,
        "name": "Time",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 770,
        "y": 500,
        "wires": []
    },
    {
        "id": "8fd5f3fa.1b9fa",
        "type": "link in",
        "z": "b53c1f70.8e70f",
        "name": "restore",
        "links": [
            "5d8f707.eee7f9"
        ],
        "x": 261.5,
        "y": 328,
        "wires": [
            [
                "f43ae8a0.512278"
            ]
        ]
    },
    {
        "id": "5d8f707.eee7f9",
        "type": "link out",
        "z": "b53c1f70.8e70f",
        "name": "restore",
        "links": [
            "8fd5f3fa.1b9fa"
        ],
        "x": 621.5,
        "y": 276,
        "wires": []
    },
    {
        "id": "4c687b8d.7e0c64",
        "type": "link in",
        "z": "b53c1f70.8e70f",
        "name": "restoreSD",
        "links": [
            "f902ad61.6b079"
        ],
        "x": 261,
        "y": 229,
        "wires": [
            [
                "91c19b27.3c9f08"
            ]
        ]
    },
    {
        "id": "f902ad61.6b079",
        "type": "link out",
        "z": "b53c1f70.8e70f",
        "name": "restoreSD",
        "links": [
            "4c687b8d.7e0c64"
        ],
        "x": 855,
        "y": 320,
        "wires": []
    },
    {
        "id": "2f1fbf35.bb46e",
        "type": "link out",
        "z": "b53c1f70.8e70f",
        "name": "setSettings",
        "links": [
            "aaa72cf9.ca042"
        ],
        "x": 622.5,
        "y": 200,
        "wires": []
    },
    {
        "id": "aaa72cf9.ca042",
        "type": "link in",
        "z": "b53c1f70.8e70f",
        "name": "setSettings",
        "links": [
            "2f1fbf35.bb46e"
        ],
        "x": 67.5,
        "y": 177,
        "wires": [
            [
                "8e66ea98.c308e8"
            ]
        ]
    },
    {
        "id": "c1929c88.9308c",
        "type": "moment",
        "z": "b53c1f70.8e70f",
        "name": "time",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "ETC/GMT",
        "adjAmount": "0",
        "adjType": "hours",
        "adjDir": "add",
        "format": "",
        "locale": "it_IT",
        "output": "time",
        "outputType": "msg",
        "outTz": "ETC/GMT",
        "x": 510,
        "y": 420,
        "wires": [
            [
                "da41cfc9.63748"
            ]
        ]
    },
    {
        "id": "a8701256.5c351",
        "type": "function",
        "z": "b53c1f70.8e70f",
        "name": "Store away state",
        "func": "msg.topic = 'awayMode';\nvar awayMode = false;\n\nif(msg.payload == \"armed_away\"){\n    awayMode = true; \n}\n\nflow.set(\"away_mode\",awayMode);\nnode.status({fill:\"red\",shape:\"dot\",text:\"away mode: \" + awayMode});  \n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 780,
        "wires": [
            [
                "d47f4ead.40532"
            ]
        ]
    },
    {
        "id": "331e9655.a67dca",
        "type": "api-call-service",
        "z": "b53c1f70.8e70f",
        "name": "",
        "server": "41108723.0bf848",
        "version": 1,
        "service_domain": "climate",
        "service": "set_temperature",
        "entityId": "climate.termostato",
        "data": "{\"temperature\": \"{{payload}}\", \"hvac_mode\": \"heat\"}",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "payload",
        "output_location_type": "msg",
        "mustacheAltTags": false,
        "x": 1060,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "4c3084c1.63fabc",
        "type": "api-call-service",
        "z": "b53c1f70.8e70f",
        "name": "",
        "server": "41108723.0bf848",
        "version": 1,
        "service_domain": "climate",
        "service": "turn_on",
        "entityId": "climate.termostato",
        "data": "{\"entity_id\": \"climate.termostato\"}",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 800,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "8e15672e.071e48",
        "type": "api-call-service",
        "z": "b53c1f70.8e70f",
        "name": "",
        "server": "41108723.0bf848",
        "version": 1,
        "service_domain": "climate",
        "service": "turn_off",
        "entityId": "climate.termostato",
        "data": "{\"entity_id\": \"climate.termostato\"}",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 800,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "feb70ddc.324df",
        "type": "server-state-changed",
        "z": "b53c1f70.8e70f",
        "name": "Away from Alarm",
        "server": "41108723.0bf848",
        "version": 1,
        "entityidfilter": "alarm_control_panel.allarme_casa",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": true,
        "x": 160,
        "y": 780,
        "wires": [
            [
                "a8701256.5c351"
            ]
        ]
    },
    {
        "id": "da2009d6.9e98a8",
        "type": "inject",
        "z": "b53c1f70.8e70f",
        "name": "Every second",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "x": 220,
        "y": 500,
        "wires": [
            [
                "7a775741.7959d8"
            ]
        ]
    },
    {
        "id": "d887b2c9.b213",
        "type": "ui_template",
        "z": "b53c1f70.8e70f",
        "group": "317e9d9c.dea8e2",
        "name": "Nest",
        "order": 2,
        "width": 5,
        "height": 5,
        "format": "<div id=\"thermostat\"></div>\n\n<style>\n\n@import url(https://fonts.googleapis.com/css?family=Open+Sans:300);\n\n#thermostat {\n margin: 0 auto;\n -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n\n.dial {\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n.dial.off .dial__ico__leaf {\n    visibility: hidden;\n}\n.dial.off .dial__lbl--target {\n    visibility: hidden;\n}\n.dial.off .dial__lbl--target--half {\n    visibility: hidden;\n}\n.dial.off .dial__lbl--off {\n    opacity: 1;\n}\n.dial .dial__shape {\n    -webkit-transition: fill 0.5s;\n    transition: fill 0.5s;\n}\n.dial path.dial__ico__leaf {\n    fill: #13EB13;\n    opacity: 0;\n    -webkit-transition: opacity 0.5s;\n    transition: opacity 0.5s;\n    pointer-events: none;\n}\n.dial.has-leaf .dial__ico__leaf {\n    display: block;\n    opacity: 1;\n    pointer-events: initial;\n}\n.dial__editableIndicator {\n    fill-rule: evenodd;\n    opacity: 0;\n    -webkit-transition: opacity 0.5s;\n    transition: opacity 0.5s;\n}\n.dial--edit path.dial__editableIndicator {\n    fill: white;\n}\n.dial--edit .dial__editableIndicator {\n    opacity: 1;\n}\n.dial--state--off .dial__shape {\n    fill: #3d3c3c;\n}\n.dial--state--idle .dial__shape {\n    fill: #3d3c3c;\n}\n.dial--state--heating .dial__shape {\n    fill: #E36304;\n}\n.dial--state--cooling .dial__shape {\n    fill: #007AF1;\n}\n.dial .dial__ticks path {\n    fill: rgba(255, 255, 255, 0.3);\n}\n.dial .dial__ticks path.active {\n    fill: rgba(255, 255, 255, 0.8);\n}\n.dial text {\n    fill: white;\n    text-anchor: middle;\n    font-family: Helvetica, sans-serif;\n    alignment-baseline: central;\n}\n.dial__lbl--target {\n    font-size: 120px;\n    font-weight: bold;\n}\n.dial__lbl--target--half {\n    font-size: 40px;\n    font-weight: bold;\n    opacity: 0;\n    -webkit-transition: opacity 0.1s;\n    transition: opacity 0.1s;\n}\n.dial__lbl--target--half.shown {\n    opacity: 1;\n    -webkit-transition: opacity 0s;\n    transition: opacity 0s;\n}\n.dial__lbl--ambient {\n    font-size: 22px;\n    font-weight: bold;\n}\n.dial__lbl--off {\n    font-size: 72px;\n    font-weight: bold;\n    opacity: 0;\n    pointer-events: none;\n}\n#controls {\n    font-family: Open Sans;\n    background-color: rgba(255, 255, 255, 0.25);\n    padding: 20px;\n    border-radius: 5px;\n    position: absolute;\n    left: 50%;\n    -webkit-transform: translatex(-50%);\n    transform: translatex(-50%);\n    margin-top: 20px;\n}\n#controls label {\n    text-align: left;\n    display: block;\n}\n#controls label span {\n    display: inline-block;\n    width: 200px;\n    text-align: right;\n    font-size: 0.8em;\n    text-transform: uppercase;\n}\n#controls p {\n    margin: 0;\n    margin-bottom: 1em;\n    padding-bottom: 1em;\n    border-bottom: 2px solid #ccc;\n}\n</style>\n<script>\n    var thermostatDial = (function() {\n\t\n\t/*\n\t * Utility functions\n\t */\n\t\n\t// Create an element with proper SVG namespace, optionally setting its attributes and appending it to another element\n\tfunction createSVGElement(tag,attributes,appendTo) {\n\t\tvar element = document.createElementNS('http://www.w3.org/2000/svg',tag);\n\t\tattr(element,attributes);\n\t\tif (appendTo) {\n\t\t\tappendTo.appendChild(element);\n\t\t}\n\t\treturn element;\n\t}\n\t\n\t// Set attributes for an element\n\tfunction attr(element,attrs) {\n\t\tfor (var i in attrs) {\n\t\t\telement.setAttribute(i,attrs[i]);\n\t\t}\n\t}\n\t\n\t// Rotate a cartesian point about given origin by X degrees\n\tfunction rotatePoint(point, angle, origin) {\n\t\tvar radians = angle * Math.PI/180;\n\t\tvar x = point[0]-origin[0];\n\t\tvar y = point[1]-origin[1];\n\t\tvar x1 = x*Math.cos(radians) - y*Math.sin(radians) + origin[0];\n\t\tvar y1 = x*Math.sin(radians) + y*Math.cos(radians) + origin[1];\n\t\treturn [x1,y1];\n\t}\n\t\n\t// Rotate an array of cartesian points about a given origin by X degrees\n\tfunction rotatePoints(points, angle, origin) {\n\t\treturn points.map(function(point) {\n\t\t\treturn rotatePoint(point, angle, origin);\n\t\t});\n\t}\n\t\n\t// Given an array of points, return an SVG path string representing the shape they define\n\tfunction pointsToPath(points) {\n\t\treturn points.map(function(point, iPoint) {\n\t\t\treturn (iPoint>0?'L':'M') + point[0] + ' ' + point[1];\n\t\t}).join(' ')+'Z';\n\t}\n\t\n\tfunction circleToPath(cx, cy, r) {\n\t\treturn [\n\t\t\t\"M\",cx,\",\",cy,\n\t\t\t\"m\",0-r,\",\",0,\n\t\t\t\"a\",r,\",\",r,0,1,\",\",0,r*2,\",\",0,\n\t\t\t\"a\",r,\",\",r,0,1,\",\",0,0-r*2,\",\",0,\n\t\t\t\"z\"\n\t\t].join(' ').replace(/\\s,\\s/g,\",\");\n\t}\n\t\n\tfunction donutPath(cx,cy,rOuter,rInner) {\n\t\treturn circleToPath(cx,cy,rOuter) + \" \" + circleToPath(cx,cy,rInner);\n\t}\n\t\n\t// Restrict a number to a min + max range\n\tfunction restrictToRange(val,min,max) {\n\t\tif (val < min) return min;\n\t\tif (val > max) return max;\n\t\treturn val;\n\t}\n\t\n\t// Round a number to the nearest 0.5\n\tfunction roundHalf(num) {\n\t\treturn Math.round(num*2)/2;\n\t}\n\t\n\tfunction setClass(el, className, state) {\n\t\tel.classList[state ? 'add' : 'remove'](className);\n\t}\n\t\n\t/*\n\t * The \"MEAT\"\n\t */\n\n\treturn function(targetElement, options) {\n\t\tvar self = this;\n\t\t\n\t\t/*\n\t\t * Options\n\t\t */\n\t\toptions = options || {};\n\t\toptions = {\n\t\t\tdiameter: options.diameter || 400,\n\t\t\tminValue: options.minValue || 14, // Minimum value for target temperature\n\t\t\tmaxValue: options.maxValue || 24, // Maximum value for target temperature\n\t\t\tnumTicks: options.numTicks || 200, // Number of tick lines to display around the dial\n\t\t\tonSetTargetTemperature: options.onSetTargetTemperature || function() {}, // Function called when new target temperature set by the dial\n\t\t};\n\t\t\n\t\t/*\n\t\t * Properties - calculated from options in many cases\n\t\t */\n\t\tvar properties = {\n\t\t\ttickDegrees: 300, // Degrees of the dial that should be covered in tick lines\n\t\t\trangeValue: options.maxValue - options.minValue,\n\t\t\tradius: options.diameter/2,\n\t\t\tticksOuterRadius: options.diameter / 30,\n\t\t\tticksInnerRadius: options.diameter / 8,\n\t\t\thvac_states: ['idle', 'off', 'heating', 'cooling'],\n\t\t\tdragLockAxisDistance: 15,\n\t\t}\n\t\tproperties.lblAmbientPosition = [properties.radius, properties.ticksOuterRadius-(properties.ticksOuterRadius-properties.ticksInnerRadius)/2]\n\t\tproperties.offsetDegrees = 180-(360-properties.tickDegrees)/2;\n\t\t\n\t\t/*\n\t\t * Object state\n\t\t */\n\t\tvar state = {\n\t\t\ttarget_temperature: options.minValue,\n\t\t\tambient_temperature: options.minValue,\n\t\t\thvac_state: properties.hvac_states[0],\n\t\t\thas_leaf: false,\n\t\t\toff: false\n\t\t};\n\t\t\n\t\t/*\n\t\t * Property getter / setters\n\t\t */\n\t\tObject.defineProperty(this,'target_temperature',{\n\t\t\tget: function() {\n\t\t\t\treturn state.target_temperature;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tstate.target_temperature = restrictTargetTemperature(+val);\n\t\t\t\trender();\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(this,'ambient_temperature',{\n\t\t\tget: function() {\n\t\t\t\treturn state.ambient_temperature;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tstate.ambient_temperature = roundHalf(+val);\n\t\t\t\trender();\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(this,'hvac_state',{\n\t\t\tget: function() {\n\t\t\t\treturn state.hvac_state;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tif (properties.hvac_states.indexOf(val)>=0) {\n\t\t\t\t\tstate.hvac_state = val;\n\t\t\t\t\trender();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tfunction str2bool(strvalue){\n          return (strvalue && typeof strvalue == 'string') ? (strvalue.toLowerCase() == 'true') : (strvalue == true);\n        }\n\t\tObject.defineProperty(this,'has_leaf',{\n\t\t\tget: function() {\n\t\t\t\treturn state.has_leaf;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tstate.has_leaf = !!str2bool(val);\n\t\t\t\trender();\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(this,'off',{\n\t\t\tget: function() {\n\t\t\t\treturn state.off;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tstate.off = !!str2bool(val);\n\t\t\t\trender();\n\t\t\t}\n\t\t});\n\t\t\n\t\t/*\n\t\t * SVG\n\t\t */\n\t\tvar svg = createSVGElement('svg',{\n\t\t\twidth: '95%', //options.diameter+'px',\n\t\t\theight: '95%', //options.diameter+'px',\n\t\t\tviewBox: '0 0 '+options.diameter+' '+options.diameter,\n\t\t\tclass: 'dial'\n\t\t},targetElement);\n\t\t// CIRCULAR DIAL\n\t\tvar circle = createSVGElement('circle',{\n\t\t\tcx: properties.radius,\n\t\t\tcy: properties.radius,\n\t\t\tr: properties.radius,\n\t\t\tclass: 'dial__shape'\n\t\t},svg);\n\t\t// EDITABLE INDICATOR\n\t\tvar editCircle = createSVGElement('path',{\n\t\t\td: donutPath(properties.radius,properties.radius,properties.radius-4,properties.radius-8),\n\t\t\tclass: 'dial__editableIndicator',\n\t\t},svg);\n\t\t\n\t\t/*\n\t\t * Ticks\n\t\t */\n\t\tvar ticks = createSVGElement('g',{\n\t\t\tclass: 'dial__ticks'\t\n\t\t},svg);\n\t\tvar tickPoints = [\n\t\t\t[properties.radius-1, properties.ticksOuterRadius],\n\t\t\t[properties.radius+1, properties.ticksOuterRadius],\n\t\t\t[properties.radius+1, properties.ticksInnerRadius],\n\t\t\t[properties.radius-1, properties.ticksInnerRadius]\n\t\t];\n\t\tvar tickPointsLarge = [\n\t\t\t[properties.radius-1.5, properties.ticksOuterRadius],\n\t\t\t[properties.radius+1.5, properties.ticksOuterRadius],\n\t\t\t[properties.radius+1.5, properties.ticksInnerRadius+20],\n\t\t\t[properties.radius-1.5, properties.ticksInnerRadius+20]\n\t\t];\n\t\tvar theta = properties.tickDegrees/options.numTicks;\n\t\tvar tickArray = [];\n\t\tfor (var iTick=0; iTick<options.numTicks; iTick++) {\n\t\t\ttickArray.push(createSVGElement('path',{d:pointsToPath(tickPoints)},ticks));\n\t\t};\n\t\t\n\t\t/*\n\t\t * Labels\n\t\t */\n\t\tvar lblTarget = createSVGElement('text',{\n\t\t\tx: properties.radius,\n\t\t\ty: properties.radius,\n\t\t\tclass: 'dial__lbl dial__lbl--target'\n\t\t},svg);\n\t\tvar lblTarget_text = document.createTextNode('');\n\t\tlblTarget.appendChild(lblTarget_text);\n\t\t//\n\t\tvar lblTargetHalf = createSVGElement('text',{\n\t\t\tx: properties.radius + properties.radius/2.5,\n\t\t\ty: properties.radius - properties.radius/8,\n\t\t\tclass: 'dial__lbl dial__lbl--target--half'\n\t\t},svg);\n\t\tvar lblTargetHalf_text = document.createTextNode('5');\n\t\tlblTargetHalf.appendChild(lblTargetHalf_text);\n\t\t//\n\t\tvar lblAmbient = createSVGElement('text',{\n\t\t\tclass: 'dial__lbl dial__lbl--ambient'\n\t\t},svg);\n\t\tvar lblAmbient_text = document.createTextNode('');\n\t\tlblAmbient.appendChild(lblAmbient_text);\n\t\t//\n\t\tvar lbloff = createSVGElement('text',{\n\t\t\tx: properties.radius,\n\t\t\ty: properties.radius,\n\t\t\tclass: 'dial__lbl dial__lbl--off'\n\t\t},svg);\n\t\tvar lbloff_text = document.createTextNode('OFF');\n\t\tlbloff.appendChild(lbloff_text);\n\t\t//\n\t\tvar icoLeaf = createSVGElement('path',{\n\t\t\tclass: 'dial__ico__leaf'\n\t\t},svg);\n\t\t\n\t\t/*\n\t\t * LEAF\n\t\t */\n\t\tvar leafScale = properties.radius/5/100;\n\t\tvar leafDef = [\"M\", 3, 84, \"c\", 24, 17, 51, 18, 73, -6, \"C\", 100, 52, 100, 22, 100, 4, \"c\", -13, 15, -37, 9, -70, 19, \"C\", 4, 32, 0, 63, 0, 76, \"c\", 6, -7, 18, -17, 33, -23, 24, -9, 34, -9, 48, -20, -9, 10, -20, 16, -43, 24, \"C\", 22, 63, 8, 78, 3, 84, \"z\"].map(function(x) {\n\t\t\treturn isNaN(x) ? x : x*leafScale;\n\t\t}).join(' ');\n\t\tvar translate = [properties.radius-(leafScale*100*0.5),properties.radius*1.5]\n\t\tvar icoLeaf = createSVGElement('path',{\n\t\t\tclass: 'dial__ico__leaf',\n\t\t\td: leafDef,\n\t\t\ttransform: 'translate('+translate[0]+','+translate[1]+')'\n\t\t},svg);\n\t\t\t\n\t\t/*\n\t\t * RENDER\n\t\t */\n\t\tfunction render() {\n\t\t\trenderOff();\n\t\t\trenderHvacState();\n\t\t\trenderTicks();\n\t\t\trenderTargetTemperature();\n\t\t\trenderAmbientTemperature();\n\t\t\trenderLeaf();\n\t\t}\n\t\trender();\n\n\t\t/*\n\t\t * RENDER - ticks\n\t\t */\n\t\tfunction renderTicks() {\n\t\t\tvar vMin, vMax;\n\t\t\tif (self.off) {\n\t\t\t\tvMin = self.ambient_temperature;\n\t\t\t\tvMax = vMin;\n\t\t\t} else {\n\t\t\t\tvMin = Math.min(self.ambient_temperature, self.target_temperature);\n\t\t\t\tvMax = Math.max(self.ambient_temperature, self.target_temperature);\n\t\t\t}\n\t\t\tvar min = restrictToRange(Math.round((vMin-options.minValue)/properties.rangeValue * options.numTicks),0,options.numTicks-1);\n\t\t\tvar max = restrictToRange(Math.round((vMax-options.minValue)/properties.rangeValue * options.numTicks),0,options.numTicks-1);\n\t\t\t//\n\t\t\ttickArray.forEach(function(tick,iTick) {\n\t\t\t\tvar isLarge = iTick==min || iTick==max;\n\t\t\t\tvar isActive = iTick >= min && iTick <= max;\n\t\t\t\tattr(tick,{\n\t\t\t\t\td: pointsToPath(rotatePoints(isLarge ? tickPointsLarge: tickPoints,iTick*theta-properties.offsetDegrees,[properties.radius, properties.radius])),\n\t\t\t\t\tclass: isActive ? 'active' : ''\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\n\t\t/*\n\t\t * RENDER - ambient temperature\n\t\t */\n\t\tfunction renderAmbientTemperature() {\n\t\t\tlblAmbient_text.nodeValue = Math.floor(self.ambient_temperature);\n\t\t\tif (self.ambient_temperature%1!=0) {\n\t\t\t\tlblAmbient_text.nodeValue += '⁵';\n\t\t\t}\n\t\t\tvar peggedValue = restrictToRange(self.ambient_temperature, options.minValue, options.maxValue);\n\t\t\tdegs = properties.tickDegrees * (peggedValue-options.minValue)/properties.rangeValue - properties.offsetDegrees;\n\t\t\tif (peggedValue > self.target_temperature) {\n\t\t\t\tdegs += 8;\n\t\t\t} else {\n\t\t\t\tdegs -= 8;\n\t\t\t}\n\t\t\tvar pos = rotatePoint(properties.lblAmbientPosition,degs,[properties.radius, properties.radius]);\n\t\t\tattr(lblAmbient,{\n\t\t\t\tx: pos[0],\n\t\t\t\ty: pos[1]\n\t\t\t});\n\t\t}\n\n\t\t/*\n\t\t * RENDER - target temperature\n\t\t */\n\t\tfunction renderTargetTemperature() {\n\t\t\tlblTarget_text.nodeValue = Math.floor(self.target_temperature);\n\t\t\tsetClass(lblTargetHalf,'shown',self.target_temperature%1!=0);\n\t\t}\n\t\t\n\t\t/*\n\t\t * RENDER - leaf\n\t\t */\n\t\tfunction renderLeaf() {\n\t\t\tsetClass(svg,'has-leaf',self.has_leaf);\n\t\t}\n\t\t\n\t\t/*\n\t\t * RENDER - HVAC state\n\t\t */\n\t\tfunction renderHvacState() {\n\t\t\tArray.prototype.slice.call(svg.classList).forEach(function(c) {\n\t\t\t\tif (c.match(/^dial--state--/)) {\n\t\t\t\t\tsvg.classList.remove(c);\n\t\t\t\t};\n\t\t\t});\n\t\t\tsvg.classList.add('dial--state--'+self.hvac_state);\n\t\t}\n\t\t\n\t\t/*\n\t\t * RENDER - off\n\t\t */\n\t\tfunction renderOff() {\n\t\t\tsvg.classList[self.off ? 'add' : 'remove']('off');\n\t\t}\n\t\t\n\t\t/*\n\t\t * Drag to control\n\t\t */\n\t\tvar _drag = {\n\t\t\tinProgress: false,\n\t\t\tstartPoint: null,\n\t\t\tstartTemperature: 0,\n\t\t\tlockAxis: undefined\n\t\t};\n\t\t\n\t\tfunction eventPosition(ev) {\n\t\t\tif (ev.targetTouches && ev.targetTouches.length) {\n\t\t\t\treturn [ev.targetTouches[0].clientX, ev.targetTouches[0].clientY];\n\t\t\t} else {\n\t\t\t\treturn [ev.x, ev.y];\n\t\t\t};\n\t\t}\n\t\t\n\t\tvar startDelay;\n\t\tfunction dragStart(ev) {\n\t\t\tstartDelay = setTimeout(function() {\n\t\t\t\tsetClass(svg, 'dial--edit', true);\n\t\t\t\t_drag.inProgress = true;\n\t\t\t\t_drag.startPoint = eventPosition(ev);\n\t\t\t\t_drag.startTemperature = self.target_temperature || options.minValue;\n\t\t\t\t_drag.lockAxis = undefined;\n\t\t\t},1000);\n\t\t};\n\t\t\n\t\tfunction dragEnd (ev) {\n\t\t\tclearTimeout(startDelay);\n\t\t\tsetClass(svg, 'dial--edit', false);\n\t\t\tif (!_drag.inProgress) return;\n\t\t\t_drag.inProgress = false;\n\t\t\tif (self.target_temperature != _drag.startTemperature) {\n\t\t\t\tif (typeof options.onSetTargetTemperature == 'function') {\n\t\t\t\t\toptions.onSetTargetTemperature(self.target_temperature);\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t\t\n\t\tfunction dragMove(ev) {\n\t\t\tev.preventDefault();\n\t\t\tif (!_drag.inProgress) return;\n\t\t\tvar evPos = eventPosition(ev);\n\t\t\tvar dy = _drag.startPoint[1]-evPos[1];\n\t\t\tvar dx = evPos[0] - _drag.startPoint[0];\n\t\t\tvar dxy;\n\t\t\tif (_drag.lockAxis == 'x') {\n\t\t\t\tdxy = dx;\n\t\t\t} else if (_drag.lockAxis == 'y') {\n\t\t\t\tdxy = dy;\n\t\t\t} else if (Math.abs(dy) > properties.dragLockAxisDistance) {\n\t\t\t\t_drag.lockAxis = 'y';\n\t\t\t\tdxy = dy;\n\t\t\t} else if (Math.abs(dx) > properties.dragLockAxisDistance) {\n\t\t\t\t_drag.lockAxis = 'x';\n\t\t\t\tdxy = dx;\n\t\t\t} else {\n\t\t\t\tdxy = (Math.abs(dy) > Math.abs(dx)) ? dy : dx;\n\t\t\t};\n\t\t\tvar dValue = (dxy*getSizeRatio())/(options.diameter)*properties.rangeValue;\n\t\t\tself.target_temperature = roundHalf(_drag.startTemperature+dValue);\n\t\t}\n\t\t\n\t\tsvg.addEventListener('mousedown',dragStart);\n\t\tsvg.addEventListener('touchstart',dragStart);\n\t\t\n\t\tsvg.addEventListener('mouseup',dragEnd);\n\t\tsvg.addEventListener('mouseleave',dragEnd);\n\t\tsvg.addEventListener('touchend',dragEnd);\n\t\t\n\t\tsvg.addEventListener('mousemove',dragMove);\n\t\tsvg.addEventListener('touchmove',dragMove);\n\t\t//\n\t\t\n\t\t/*\n\t\t * Helper functions\n\t\t */\n\t\tfunction restrictTargetTemperature(t) {\n\t\t\treturn restrictToRange(roundHalf(t),options.minValue,options.maxValue);\n\t\t}\n\t\t\n\t\tfunction angle(point) {\n\t\t\tvar dx = point[0] - properties.radius;\n\t\t\tvar dy = point[1] - properties.radius;\n\t\t\tvar theta = Math.atan(dx/dy) / (Math.PI/180);\n\t\t\tif (point[0]>=properties.radius && point[1] < properties.radius) {\n\t\t\t\ttheta = 90-theta - 90;\n\t\t\t} else if (point[0]>=properties.radius && point[1] >= properties.radius) {\n\t\t\t\ttheta = 90-theta + 90;\n\t\t\t} else if (point[0]<properties.radius && point[1] >= properties.radius) {\n\t\t\t\ttheta = 90-theta + 90;\n\t\t\t} else if (point[0]<properties.radius && point[1] < properties.radius) {\n\t\t\t\ttheta = 90-theta+270;\n\t\t\t}\n\t\t\treturn theta;\n\t\t};\n\t\t\n\t\tfunction getSizeRatio() {\n\t\t\treturn options.diameter / targetElement.clientWidth;\n\t\t}\n\t\t\n\t};\n})();\n\n/* ==== */\nvar initializing = true;\n\n(function(scope) {\n    var nest = new thermostatDial(document.getElementById('thermostat'),{\n    \tonSetTargetTemperature: function(v) {\n    \t    var p = {\n    \t        \"ambient_temperature\":nest.ambient_temperature,\n    \t        \"target_temperature\":v,\n    \t        \"hvac_state\":nest.hvac_state,\n    \t        \"has_leaf\": nest.has_leaf,\n    \t        \"off_view\":nest.off\n    \t    };\n    \t\tscope.send({topic: \"target_temperature\", payload: p});\n    \t}\n    });\n    \n    scope.$watch('msg', function(data) {\n        if (initializing) {\n            initializing = false;\n            } else {\n            nest.ambient_temperature = data.payload.ambient_temperature || 0;\n            nest.target_temperature = data.payload.target_temperature || 0;\n            nest.hvac_state = data.payload.hvac_state || \"off\";\n            nest.has_leaf = data.payload.has_leaf || false;\n            nest.off = data.payload.off_view || false;\n        }\n        \n    });\n})(scope);\n\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 550,
        "y": 580,
        "wires": [
            [
                "dfdda42e.7dcc58"
            ]
        ]
    },
    {
        "id": "d47f4ead.40532",
        "type": "function",
        "z": "b53c1f70.8e70f",
        "name": "Data",
        "func": "msg.topic = \"update\";\nvar data = {\n    'ambient_temperature': flow.get(\"ambient_temperature\") || 20,\n    'target_temperature': flow.get(\"target_temperature\") || 14,\n    'hvac_state': flow.get(\"hvac_action\") || 'off',\n    'has_leaf': flow.get(\"away_mode\") || 'false',\n    'off_view': flow.get(\"off_view\") || 'false'\n}\nmsg.payload = data;\nnode.status({fill:\"red\",shape:\"dot\",text: \"ambient_temperature: \" + data.ambient_temperature + \" / target_temperature: \" + data.target_temperature + \" / away_mode: \" + data.has_leaf + \" / climate_state: \" + flow.get(\"climate_state\") + \" / hvac_state: \" + data.hvac_state});  \n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 720,
        "wires": [
            [
                "d887b2c9.b213",
                "8000f986.101618"
            ]
        ]
    },
    {
        "id": "dfdda42e.7dcc58",
        "type": "function",
        "z": "b53c1f70.8e70f",
        "name": "New setpoint from UI",
        "func": "if (msg.topic == \"target_temperature\") {\n    msg.payload = msg.payload.target_temperature;\n    flow.set(\"target_temperature\", msg.payload);\n    node.status({fill:\"red\",shape:\"dot\",text:\"target_temperature: \" + msg.payload}); \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 760,
        "y": 580,
        "wires": [
            [
                "331e9655.a67dca"
            ]
        ]
    },
    {
        "id": "5dee7ead.3b351",
        "type": "inject",
        "z": "b53c1f70.8e70f",
        "name": "Once only",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 430,
        "y": 660,
        "wires": [
            [
                "d47f4ead.40532"
            ]
        ]
    },
    {
        "id": "329ae89a.73ed38",
        "type": "server-state-changed",
        "z": "b53c1f70.8e70f",
        "name": "Climate",
        "server": "41108723.0bf848",
        "version": 1,
        "entityidfilter": "climate.termostato",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": false,
        "x": 190,
        "y": 720,
        "wires": [
            [
                "9235727a.6e04d",
                "ac4fb59b.eb4fe8"
            ]
        ]
    },
    {
        "id": "8000f986.101618",
        "type": "debug",
        "z": "b53c1f70.8e70f",
        "name": "climate_debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 820,
        "y": 720,
        "wires": []
    },
    {
        "id": "9235727a.6e04d",
        "type": "function",
        "z": "b53c1f70.8e70f",
        "name": "Store climate state",
        "func": "msg.topic = 'climate';\n\nflow.set(\"ambient_temperature\", msg.data.new_state.attributes.current_temperature);\nflow.set(\"target_temperature\",msg.data.new_state.attributes.temperature);\nflow.set(\"climate_state\",msg.payload);\nflow.set(\"off_view\",msg.payload == \"off\" ? true : false);\nflow.set(\"hvac_action\",msg.data.new_state.attributes.hvac_action);\n\nnode.status({fill:\"red\",shape:\"dot\",text:msg.payload});  \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 720,
        "wires": [
            [
                "d47f4ead.40532"
            ]
        ]
    },
    {
        "id": "f8972a44.07e268",
        "type": "ui_switch",
        "z": "b53c1f70.8e70f",
        "name": "",
        "label": "Off/On",
        "tooltip": "",
        "group": "317e9d9c.dea8e2",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 330,
        "y": 880,
        "wires": [
            [
                "e89a2b6d.b97088"
            ]
        ]
    },
    {
        "id": "dcb719e7.7454c8",
        "type": "ui_button",
        "z": "b53c1f70.8e70f",
        "name": "",
        "group": "317e9d9c.dea8e2",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Manual",
        "tooltip": "",
        "color": "{{colour}}",
        "bgcolor": "{{payload}}",
        "icon": "",
        "payload": "manual",
        "payloadType": "str",
        "topic": "",
        "x": 580,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "f7dd2a3d.372418",
        "type": "ui_button",
        "z": "b53c1f70.8e70f",
        "name": "",
        "group": "317e9d9c.dea8e2",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Scheduler",
        "tooltip": "",
        "color": "{{colour}}",
        "bgcolor": "{{payload}}",
        "icon": "",
        "payload": "scheduler",
        "payloadType": "str",
        "topic": "",
        "x": 580,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "7ace00a7.019dc",
        "type": "ui_button",
        "z": "b53c1f70.8e70f",
        "name": "",
        "group": "317e9d9c.dea8e2",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Countdown: 1 H",
        "tooltip": "",
        "color": "{{colour}}",
        "bgcolor": "{{payload}}",
        "icon": "",
        "payload": "countdown",
        "payloadType": "str",
        "topic": "",
        "x": 600,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "e89a2b6d.b97088",
        "type": "switch",
        "z": "b53c1f70.8e70f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 880,
        "wires": [
            [
                "8e15672e.071e48"
            ],
            [
                "4c3084c1.63fabc"
            ]
        ]
    },
    {
        "id": "ac4fb59b.eb4fe8",
        "type": "function",
        "z": "b53c1f70.8e70f",
        "name": "sync switch",
        "func": "msg.payload = (msg.payload == \"off\" ? false : true);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 150,
        "y": 880,
        "wires": [
            [
                "f8972a44.07e268",
                "22a72886.5ba1b8"
            ]
        ]
    },
    {
        "id": "1429337.dbffacd",
        "type": "change",
        "z": "b53c1f70.8e70f",
        "name": "white",
        "rules": [
            {
                "t": "set",
                "p": "colour",
                "pt": "msg",
                "to": "white",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#097479",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 960,
        "wires": [
            [
                "dcb719e7.7454c8"
            ]
        ]
    },
    {
        "id": "22a72886.5ba1b8",
        "type": "function",
        "z": "b53c1f70.8e70f",
        "name": "change button state",
        "func": "if (msg.payload == true){\n    return [null, msg, null, null]\n} else {\n    return [null, null, null, msg]\n}\n",
        "outputs": 4,
        "noerr": 0,
        "x": 170,
        "y": 1100,
        "wires": [
            [
                "1429337.dbffacd",
                "458a8740.751c58",
                "d40f771f.881ed8"
            ],
            [
                "dee7ceef.d1dfc",
                "ad8f8e08.09ee5",
                "d40f771f.881ed8"
            ],
            [
                "28cfb43d.2ed3bc",
                "458a8740.751c58",
                "ad8f8e08.09ee5"
            ],
            [
                "b0a3fc18.9b0af"
            ]
        ]
    },
    {
        "id": "ad8f8e08.09ee5",
        "type": "change",
        "z": "b53c1f70.8e70f",
        "name": "gray",
        "rules": [
            {
                "t": "set",
                "p": "colour",
                "pt": "msg",
                "to": "gray",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#097479",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1000,
        "wires": [
            [
                "dcb719e7.7454c8"
            ]
        ]
    },
    {
        "id": "dee7ceef.d1dfc",
        "type": "change",
        "z": "b53c1f70.8e70f",
        "name": "white",
        "rules": [
            {
                "t": "set",
                "p": "colour",
                "pt": "msg",
                "to": "white",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#097479",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1060,
        "wires": [
            [
                "f7dd2a3d.372418"
            ]
        ]
    },
    {
        "id": "458a8740.751c58",
        "type": "change",
        "z": "b53c1f70.8e70f",
        "name": "gray",
        "rules": [
            {
                "t": "set",
                "p": "colour",
                "pt": "msg",
                "to": "gray",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#097479",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1100,
        "wires": [
            [
                "f7dd2a3d.372418"
            ]
        ]
    },
    {
        "id": "28cfb43d.2ed3bc",
        "type": "change",
        "z": "b53c1f70.8e70f",
        "name": "white",
        "rules": [
            {
                "t": "set",
                "p": "colour",
                "pt": "msg",
                "to": "white",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#097479",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1160,
        "wires": [
            [
                "7ace00a7.019dc"
            ]
        ]
    },
    {
        "id": "d40f771f.881ed8",
        "type": "change",
        "z": "b53c1f70.8e70f",
        "name": "gray",
        "rules": [
            {
                "t": "set",
                "p": "colour",
                "pt": "msg",
                "to": "gray",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#097479",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1200,
        "wires": [
            [
                "7ace00a7.019dc"
            ]
        ]
    },
    {
        "id": "b0a3fc18.9b0af",
        "type": "change",
        "z": "b53c1f70.8e70f",
        "name": "hide",
        "rules": [
            {
                "t": "set",
                "p": "colour",
                "pt": "msg",
                "to": "#333333",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#333333",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1260,
        "wires": [
            [
                "dcb719e7.7454c8",
                "f7dd2a3d.372418",
                "7ace00a7.019dc"
            ]
        ]
    },
    {
        "id": "77b849cb.094c08",
        "type": "ui_group",
        "z": "",
        "name": "Programmazione",
        "tab": "5d954e3e.9339b",
        "order": 4,
        "disp": false,
        "width": 8,
        "collapse": false
    },
    {
        "id": "317e9d9c.dea8e2",
        "type": "ui_group",
        "z": "",
        "name": "Nest",
        "tab": "5d954e3e.9339b",
        "order": 1,
        "disp": false,
        "width": 8,
        "collapse": false
    },
    {
        "id": "41108723.0bf848",
        "type": "server",
        "z": "",
        "name": "Home Assistant"
    },
    {
        "id": "5d954e3e.9339b",
        "type": "ui_tab",
        "z": "",
        "name": "Cronotermostato",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]